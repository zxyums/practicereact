import { ColDef } from 'ag-grid-community';
import React from 'react';

const updatedDateColumn: ColDef = {
  field: 'updatedDate',
  headerName: 'Last Update Date (UTC)',
  minWidth: 240,
  width: 240,
  sortable: true,

  // Ensure sorting works correctly (null values go last)
  comparator: (date1: string | null, date2: string | null): number => {
    if (!date1 && !date2) return 0; // Both are null
    if (!date1) return 1; // Null should go last
    if (!date2) return -1; // Null should go last

    return new Date(date1).getTime() - new Date(date2).getTime(); // Sort ascending
  },

  // Use React-friendly JSX for cell rendering
  cellRenderer: (params: { value: string | null }) => {
    if (!params.value) return ''; // Handle null values gracefully

    const utcDate = new Date(params.value);

    // Format UTC date for display in the grid (DD-MMM-YYYY HH:mm UTC)
    const utcFormatted: string = utcDate.toLocaleString('en-GB', {
      day: '2-digit',
      month: 'short',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit',
      hour12: false, // 24-hour format
      timeZone: 'UTC', // Force UTC formatting
    }) + ' UTC';

    // Convert UTC date to the user's actual local timezone
    const localDate: string = utcDate.toLocaleString(undefined, {
      day: '2-digit',
      month: 'short',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit',
      hour12: false, // 24-hour format
      timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone, // Detect user's timezone dynamically
    });

    return (
      <div title={`Local Time: ${localDate}`}>
        {utcFormatted}
      </div>
    );
  }
};

export default updatedDateColumn;