Here’s another tricky 10-minute React task for a seasoned developer:

Requirement: Infinite Scroll with Dynamic API Pagination

Create a React component that implements infinite scrolling to fetch paginated data from an API. The requirements are:
	1.	Use a mock API (you can simulate it with setTimeout and Promise).
	2.	Fetch 10 items per request and append them to the existing list.
	3.	Trigger the next API call when the user scrolls to the bottom of the container.
	4.	Display a loading spinner while fetching data.
	5.	Handle the scenario where there are no more items to fetch (e.g., display “No more data”).

Key Features to Test:
	•	API simulation: Understanding of Promise and asynchronous behavior.
	•	Event handling: Listening for and handling scroll events.
	•	State management: Efficiently appending data and managing loading states.
	•	Optimization: Avoiding unnecessary API calls (e.g., while data is loading).

Would you like the solution or hints for this one?