Here’s a tricky 10-minute React task designed for an experienced developer with 6 years of experience:

Requirement: Dynamic Debounced Search with Highlight

Create a React component that implements a debounced search input. It should:
	1.	Accept a list of strings (passed via props) and filter results based on the user’s input.
	2.	Highlight the matching parts of the text in the results dynamically.
	3.	Use a debouncing mechanism to prevent excessive renders during fast typing.
	4.	Display “No results found” if no match exists.

Key Features to Test:
	•	Debouncing logic: Understanding of setTimeout or useDebounce hooks.
	•	Controlled components: Handling useState and input changes.
	•	Dynamic DOM manipulation: Highlighting matching substrings in JSX.
	•	Performance awareness: Avoiding unnecessary re-renders.

Would you like the solution or hints for this task?