const _ = require('lodash');

/**
 * Filters records, giving priority to defined `draftLanguageId`.
 * Retains undefined `draftLanguageId` records if their `nonLatinLanguagesSupported`
 * does not match with any existing normalized key.
 *
 * @param {Array} data - The input array of objects.
 * @returns {Array} - Filtered array.
 */
function filterWithPriorityAndRetention(data) {
  // Normalize `nonLatinLanguagesSupported` to consider partial matches as the same key
  const normalizedData = data.map((item) => ({
    ...item,
    normalizedKey: item.nonLatinLanguagesSupported.split(':')[0], // Extract the base key (e.g., NL001)
  }));

  // Get all unique normalized keys with valid `draftLanguageId` and `statusCode: "1"`
  const validKeys = new Set(
    normalizedData
      .filter(
        (item) => item.statusCode === "1" && item.draftLanguageId !== undefined
      )
      .map((item) => item.normalizedKey)
  );

  // Process each record
  const filtered = normalizedData.filter((item) => {
    // If the record has a valid draftLanguageId, always retain it
    if (item.draftLanguageId !== undefined) {
      return true;
    }

    // If the normalizedKey doesn't exist in the valid keys, retain the record
    if (!validKeys.has(item.normalizedKey)) {
      return true;
    }

    // Otherwise, remove the record (as it has an undefined draftLanguageId and matches an existing key)
    return false;
  });

  // Remove the temporary `normalizedKey` before returning
  return filtered.map(({ normalizedKey, ...rest }) => rest);
}

// Example Usage
const languages = [
  { draftLanguageId: undefined, nonLatinLanguagesSupported: "NL012", statusCode: "1" },
  { draftLanguageId: undefined, nonLatinLanguagesSupported: "NL001", statusCode: "1" },
  { draftLanguageId: 3416, nonLatinLanguagesSupported: "NL005", statusCode: "1" },
  { draftLanguageId: undefined, nonLatinLanguagesSupported: "NL005", statusCode: "1" },
  { draftLanguageId: 3419, nonLatinLanguagesSupported: "NL001:English", statusCode: "1" },
  { draftLanguageId: 3358, nonLatinLanguagesSupported: "NL012:Arabic", statusCode: "1" },
  { draftLanguageId: undefined, nonLatinLanguagesSupported: "NL012:Arabic", statusCode: "0" },
  { draftLanguageId: 3417, nonLatinLanguagesSupported: "NL012:Arabic", statusCode: "1" },
  { draftLanguageId: 3418, nonLatinLanguagesSupported: "NL012:Arabic", statusCode: "0" },
  { draftLanguageId: undefined, nonLatinLanguagesSupported: "NL015", statusCode: "1" }, // Should be retained
  { draftLanguageId: 3420, nonLatinLanguagesSupported: "NL010:French", statusCode: "1" },
];

const filteredLanguages = filterWithPriorityAndRetention(languages);
console.log(filteredLanguages);